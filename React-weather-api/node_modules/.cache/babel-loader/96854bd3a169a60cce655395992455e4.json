{"ast":null,"code":"var _jsxFileName = \"/home/francesca/Desktop/crispy-funicular/React-weather-api/src/components/WeatherCard/WeatherCard.jsx\";\nimport React, { Component } from \"react\";\nimport styles from \"./WeatherCard.css\";\nexport default class WeatherCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weatherData: \"\",\n      error: null\n    };\n\n    this.convertKelvinToCelsius = kelvin => {\n      const celsius = kelvin - 273.15;\n      return celsius.toFixed(2);\n    };\n  }\n\n  componentDidMount() {\n    let cityID = this.props.city;\n    let api = \"0f33f5c78acf44e7d38b5f6706f6f59d\";\n    let weatherURL = `https://api.openweathermap.org/data/2.5/weather?id=${cityID}&appid=${api}`;\n    fetch(weatherURL).then(response => response.json()).then(weatherData => {\n      this.setState({\n        weatherData\n      });\n    }).catch(error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.weatherData);\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Weather for: \"), !this.state.weatherData ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"Data are not availabe\") :\n    /*#__PURE__*/\n    //   <article>\n    //     <h2>{this.state.weatherData.name} </h2>\n    //     <p>\n    //       Current Temperature:{\" \"}\n    //       {this.convertKelvinToCelsius(this.state.weatherData.main.temp)}°C\n    //     </p>\n    //     <p>Humidity: {this.state.weatherData.main.humidity}% </p>\n    //     <p>\n    //       Min Temperature:{\" \"}\n    //       {this.convertKelvinToCelsius(\n    //         this.state.weatherData.main.temp_min\n    //       )}\n    //       °C\n    //     </p>\n    //     <p>\n    //       Max Temperature:{\" \"}\n    //       {this.convertKelvinToCelsius(\n    //         this.state.weatherData.main.temp_max\n    //       )}\n    //       °C\n    //     </p>\n    //   </article>\n    React.createElement(\"div\", {\n      class: \"card text-white bg-dark mb-3\",\n      style: \"max-width: 18rem;\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \"Dark card title\"), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/francesca/Desktop/crispy-funicular/React-weather-api/src/components/WeatherCard/WeatherCard.jsx"],"names":["React","Component","styles","WeatherCard","state","weatherData","error","convertKelvinToCelsius","kelvin","celsius","toFixed","componentDidMount","cityID","props","city","api","weatherURL","fetch","then","response","json","setState","catch","render","console","log","card"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDG,KADiD,GACzC;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,KAAK,EAAE;AAFD,KADyC;;AAAA,SAMjDC,sBANiD,GAMxBC,MAAM,IAAI;AACjC,YAAMC,OAAO,GAAGD,MAAM,GAAG,MAAzB;AACA,aAAOC,OAAO,CAACC,OAAR,CAAgB,CAAhB,CAAP;AACD,KATgD;AAAA;;AAWjDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,IAAxB;AACA,QAAIC,GAAG,GAAG,kCAAV;AACA,QAAIC,UAAU,GAAI,sDAAqDJ,MAAO,UAASG,GAAI,EAA3F;AACAE,IAAAA,KAAK,CAACD,UAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQb,WAAW,IAAI;AACnB,WAAKgB,QAAL,CAAc;AAAEhB,QAAAA;AAAF,OAAd;AACD,KAJH,EAKGiB,KALH,CAKShB,KAAK,IAAI;AACd,WAAKe,QAAL,CAAc;AAAEf,QAAAA;AAAF,OAAd;AACD,KAPH;AAQD;;AAEDiB,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWC,WAAvB;AACA,wBACE;AAAS,MAAA,SAAS,EAAEH,MAAM,CAACwB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEG,CAAC,KAAKtB,KAAL,CAAWC,WAAZ,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD;AAAA;AAGC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAK,MAAA,KAAK,EAAC,8BAAX;AAA0C,MAAA,KAAK,EAAC,mBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAG,MAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGAFF,CAFF,CA3BJ,CADF;AAyCD;;AApEgD","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./WeatherCard.css\";\n\nexport default class WeatherCard extends Component {\n  state = {\n    weatherData: \"\",\n    error: null\n  };\n\n  convertKelvinToCelsius = kelvin => {\n    const celsius = kelvin - 273.15;\n    return celsius.toFixed(2);\n  };\n\n  componentDidMount() {\n    let cityID = this.props.city;\n    let api = \"0f33f5c78acf44e7d38b5f6706f6f59d\";\n    let weatherURL = `https://api.openweathermap.org/data/2.5/weather?id=${cityID}&appid=${api}`;\n    fetch(weatherURL)\n      .then(response => response.json())\n      .then(weatherData => {\n        this.setState({ weatherData });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  }\n\n  render() {\n    console.log(this.state.weatherData);\n    return (\n      <section className={styles.card}>\n        <h1>Weather for: </h1>\n        {!this.state.weatherData ? (\n          <p>Data are not availabe</p>\n        ) : (\n          //   <article>\n          //     <h2>{this.state.weatherData.name} </h2>\n          //     <p>\n          //       Current Temperature:{\" \"}\n          //       {this.convertKelvinToCelsius(this.state.weatherData.main.temp)}°C\n          //     </p>\n          //     <p>Humidity: {this.state.weatherData.main.humidity}% </p>\n          //     <p>\n          //       Min Temperature:{\" \"}\n          //       {this.convertKelvinToCelsius(\n          //         this.state.weatherData.main.temp_min\n          //       )}\n          //       °C\n          //     </p>\n          //     <p>\n          //       Max Temperature:{\" \"}\n          //       {this.convertKelvinToCelsius(\n          //         this.state.weatherData.main.temp_max\n          //       )}\n          //       °C\n          //     </p>\n          //   </article>\n          <div class=\"card text-white bg-dark mb-3\" style=\"max-width: 18rem;\">\n            <div class=\"card-header\"></div>\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">Dark card title</h5>\n              <p class=\"card-text\">\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </p>\n            </div>\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}