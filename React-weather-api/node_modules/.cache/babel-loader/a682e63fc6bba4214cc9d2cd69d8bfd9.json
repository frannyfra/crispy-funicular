{"ast":null,"code":"var _jsxFileName = \"/home/francesca/Desktop/crispy-funicular/React-weather-api/src/components/WeatherCard/WeatherCard.jsx\";\nimport React, { Component } from \"react\";\nimport styles from \"./WeatherCard.css\";\nexport default class WeatherCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weatherData: \"\",\n      error: null\n    };\n\n    this.convertKelvinToCelsius = kelvin => {\n      let celsius = kelvin - 273.15;\n      celsius = Number.parseFloat(celsius).toFixed(2);\n      return celsius;\n    };\n  }\n\n  componentWillMount() {\n    let cityID = this.props.city;\n    let api = \"0f33f5c78acf44e7d38b5f6706f6f59d\";\n    let weatherURL = `https://api.openweathermap.org/data/2.5/weather?id=${cityID}&appid=${api}`;\n    fetch(weatherURL).then(response => response.json()).then(weatherData => {\n      this.setState({\n        weatherData\n      });\n    }).catch(error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, !this.state.weatherData ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, \"Data are not availabe\") : /*#__PURE__*/React.createElement(\"article\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"Weather for: \", this.state.weatherData.name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, \"Current Temperature:\", \" \", this.convertKelvinToCelsius(this.state.weatherData.main.temp), \"\\xB0C\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Humidity: \", this.state.weatherData.main.humidity, \"% \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Min Temperature:\", \" \", this.convertKelvinToCelsius(this.state.weatherData.main.temp_min), \"\\xB0C\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Max Temperature:\", \" \", this.convertKelvinToCelsius(this.state.weatherData.main.temp_max), \"\\xB0C\")));\n  }\n\n}","map":{"version":3,"sources":["/home/francesca/Desktop/crispy-funicular/React-weather-api/src/components/WeatherCard/WeatherCard.jsx"],"names":["React","Component","styles","WeatherCard","state","weatherData","error","convertKelvinToCelsius","kelvin","celsius","Number","parseFloat","toFixed","componentWillMount","cityID","props","city","api","weatherURL","fetch","then","response","json","setState","catch","render","card","name","main","temp","humidity","temp_min","temp_max"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDG,KADiD,GACzC;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,KAAK,EAAE;AAFD,KADyC;;AAAA,SAMjDC,sBANiD,GAMxBC,MAAM,IAAI;AACjC,UAAIC,OAAO,GAAGD,MAAM,GAAG,MAAvB;AACAC,MAAAA,OAAO,GAAGC,MAAM,CAACC,UAAP,CAAkBF,OAAlB,EAA2BG,OAA3B,CAAmC,CAAnC,CAAV;AACA,aAAOH,OAAP;AACD,KAVgD;AAAA;;AAYjDI,EAAAA,kBAAkB,GAAG;AACnB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,IAAxB;AACA,QAAIC,GAAG,GAAG,kCAAV;AACA,QAAIC,UAAU,GAAI,sDAAqDJ,MAAO,UAASG,GAAI,EAA3F;AACAE,IAAAA,KAAK,CAACD,UAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQf,WAAW,IAAI;AACnB,WAAKkB,QAAL,CAAc;AAAElB,QAAAA;AAAF,OAAd;AACD,KAJH,EAKGmB,KALH,CAKSlB,KAAK,IAAI;AACd,WAAKiB,QAAL,CAAc;AAAEjB,QAAAA;AAAF,OAAd;AACD,KAPH;AAQD;;AAEDmB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAS,MAAA,SAAS,EAAEvB,MAAM,CAACwB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAKtB,KAAL,CAAWC,WAAZ,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB,KAAKD,KAAL,CAAWC,WAAX,CAAuBsB,IAAzC,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACuB,GADvB,EAEG,KAAKpB,sBAAL,CAA4B,KAAKH,KAAL,CAAWC,WAAX,CAAuBuB,IAAvB,CAA4BC,IAAxD,CAFH,UAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKzB,KAAL,CAAWC,WAAX,CAAuBuB,IAAvB,CAA4BE,QAA1C,OANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACmB,GADnB,EAEG,KAAKvB,sBAAL,CACC,KAAKH,KAAL,CAAWC,WAAX,CAAuBuB,IAAvB,CAA4BG,QAD7B,CAFH,UAPF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACmB,GADnB,EAEG,KAAKxB,sBAAL,CACC,KAAKH,KAAL,CAAWC,WAAX,CAAuBuB,IAAvB,CAA4BI,QAD7B,CAFH,UAdF,CAJJ,CADF;AA8BD;;AAzDgD","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./WeatherCard.css\";\n\nexport default class WeatherCard extends Component {\n  state = {\n    weatherData: \"\",\n    error: null\n  };\n\n  convertKelvinToCelsius = kelvin => {\n    let celsius = kelvin - 273.15;\n    celsius = Number.parseFloat(celsius).toFixed(2);\n    return celsius;\n  };\n\n  componentWillMount() {\n    let cityID = this.props.city;\n    let api = \"0f33f5c78acf44e7d38b5f6706f6f59d\";\n    let weatherURL = `https://api.openweathermap.org/data/2.5/weather?id=${cityID}&appid=${api}`;\n    fetch(weatherURL)\n      .then(response => response.json())\n      .then(weatherData => {\n        this.setState({ weatherData });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  }\n\n  render() {\n    return (\n      <section className={styles.card}>\n        {!this.state.weatherData ? (\n          <p>Data are not availabe</p>\n        ) : (\n          <article>\n            <h1>Weather for: {this.state.weatherData.name} </h1>\n            <p>\n              Current Temperature:{\" \"}\n              {this.convertKelvinToCelsius(this.state.weatherData.main.temp)}°C\n            </p>\n            <p>Humidity: {this.state.weatherData.main.humidity}% </p>\n            <p>\n              Min Temperature:{\" \"}\n              {this.convertKelvinToCelsius(\n                this.state.weatherData.main.temp_min\n              )}\n              °C\n            </p>\n            <p>\n              Max Temperature:{\" \"}\n              {this.convertKelvinToCelsius(\n                this.state.weatherData.main.temp_max\n              )}\n              °C\n            </p>\n          </article>\n        )}\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}